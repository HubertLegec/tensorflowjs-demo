{"version":3,"sources":["Canvas.jsx","Result.jsx","Measure.jsx","utils.js","TrainingLineChart.jsx","TrainingProgress.jsx","Training.jsx","MnistData.js","MnistModelBuilder.js","MnistModel.js","App.jsx","serviceWorker.js","index.js","../node_modules/jsdom/lib/jsdom sync","../node_modules/parse5/lib sync"],"names":["CanvasComponent","_sketch","onClearClick","onNewImage","_this","props","clear","undefined","onRecognizeClick","sketchImage","_this2","this","_this$props","containerWidth","disabled","canvasSize","concat","react_default","a","createElement","className","dist","width","height","tool","Tools","Pencil","backgroundColor","lineColor","lineWidth","ref","c","onClick","toDataURL","Component","Canvas","Dimensions","Result","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","isResultPresent","renderResult","renderNoResult","digit","Measure","_ref","name","toFixed","base64ToImageData","_x","_x2","_base64ToImageData","_callee","base64Image","outputSize","image","arrayLikeImage","regenerator_default","wrap","_context","prev","next","Image","Promise","resolve","onload","canvas","document","context","getContext","drawImage","imageData","getImageData","monodata","i","len","data","length","push","monoimgdata","ImageData","Uint8ClampedArray","src","abrupt","stop","lastArrayItem","array","TrainingLineChartComponent","chartData","title","Measure_Measure","map","v","accuracy","loss","ResponsiveContainer","aspect","LineChart","XAxis","dataKey","minTickGap","YAxis","yAxisId","label","angle","position","orientation","CartesianGrid","strokeDasharray","Tooltip","Legend","Line","type","stroke","activeDot","r","TrainingProgress","progress","currentEpoch","epochs","es","percent","TrainingComponent","call","onBatchProcessed","setState","objectSpread","state","toConsumableArray","onEpochProcessed","validationLoss","validationAccuracy","onTrainingFinished","result","onEpochsNumberChange","e","target","MNIST_MODEL","trainingStarted","trainEpochs","TrainingProgress_TrainingProgress","renderNotStarted","renderCharts","min","max","onChange","onTrainClick","TrainingLineChart_TrainingLineChartComponent","chartValidationData","loadData","train","_this3","batch","idx","_this4","epoch","Training","IMAGE_H","IMAGE_W","IMAGE_SIZE","NUM_CLASSES","MnistData","imagesTensorShape","dim1","labelsTensorShape","_load","asyncToGenerator","mark","img","ctx","imgRequest","labelsRequest","response","labelsResponse","reject","crossOrigin","naturalWidth","naturalHeight","datasetBytesBuffer","ArrayBuffer","NUM_DATASET_ELEMENTS","datasetBytesView","Float32Array","j","datasetImages","fetch","all","sent","t0","Uint8Array","arrayBuffer","t1","datasetLabels","trainImages","slice","testImages","trainLabels","testLabels","get","xs","tf","labels","MnistModelBuilder","model","add","conv2d","inputShape","kernelSize","filters","activation","maxPooling2d","poolSize","strides","flatten","dense","units","compile","optimizer","metrics","sgd","LEARNING_RATE","MnistModel","_trainBatchCount","_model","build","_data","_loadData","load","_trainData","trainData","_testData","testData","_totalNumBatches","Math","ceil","shape","VALIDATION_SPLIT","BATCH_SIZE","_train","_callee2","onFinished","testResult","_context2","fit","batchSize","validationSplit","callbacks","onBatchEnd","logs","onTrainingBatchEnd","onEpochEnd","onTrainEpochEnd","evaluate","_x3","inputTensor","reshape","cast","div","predictionResult","predict","dataSync","console","log","indexOf","_onTrainingBatchEnd","_callee3","callback","_context3","acc","_x4","_x5","_x6","_onTrainEpochEnd","_callee4","_context4","_valAcc","val_acc","_x7","_x8","_x9","App","MNIST_SIZE","trainingFinished","Training_Training","Canvas_Canvas","Result_Result","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister","webpackEmptyContext","req","Error","code","keys","module","exports","id"],"mappings":"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","file":"static/js/main.0733cccf.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {SketchField, Tools} from 'react-sketch';\nimport Dimensions from 'react-dimensions';\nimport \"./Canvas.css\"\n\n\nclass CanvasComponent extends Component {\n  _sketch = null;\n\n  render() {\n    const {containerWidth, disabled} = this.props;\n    const canvasSize = `${containerWidth - 16}px`;\n    return <div className='canvas'>\n      <header className='canvas-header'>Write your digit below:</header>\n      <SketchField width={canvasSize}\n                   height={canvasSize}\n                   tool={Tools.Pencil}\n                   backgroundColor='#ffffff'\n                   lineColor='black'\n                   lineWidth={50}\n                   ref={c => (this._sketch = c)}/>\n      <div className='canvas-actions'>\n        <button disabled={disabled}\n                onClick={this.onClearClick}>Clear</button>\n        <button disabled={disabled}\n                onClick={this.onRecognizeClick}>Recognize</button>\n      </div>\n    </div>;\n  }\n\n  onClearClick = () => {\n    const {onNewImage} = this.props;\n    this._sketch.clear();\n    onNewImage(undefined);\n  };\n\n  onRecognizeClick = () => {\n    const {onNewImage} = this.props;\n    const image = this.sketchImage;\n    onNewImage(image);\n  };\n\n  get sketchImage() {\n    return this._sketch.toDataURL();\n  }\n}\n\nexport const Canvas = Dimensions()(CanvasComponent);\n","import React, {Component} from 'react';\nimport './Result.css';\n\nexport class Result extends Component {\n  render() {\n    return <div className='result-component'>\n      {this.isResultPresent() ? this.renderResult() : this.renderNoResult()}\n    </div>;\n  }\n\n  renderResult() {\n    const {digit} = this.props;\n    return <div className='result'>{digit}</div>;\n  }\n\n  renderNoResult() {\n    return <div className='no-result'>Recognized digit will appear here</div>;\n  }\n\n  isResultPresent() {\n    const {digit} = this.props;\n    return digit !== null && digit !== undefined;\n  }\n}","import React from 'react';\nimport \"./Measure.css\";\n\nexport const Measure = ({name, value}) => (\n  <div className=\"measure\">\n        <div className=\"name\">{name}</div>\n        <div className=\"value\">{value ? value.toFixed(4) : 'N/A'}</div>\n    </div>\n);\n","\nexport async function base64ToImageData(base64Image, outputSize) {\n  const image = new Image();\n  const arrayLikeImage = new Promise((resolve) => {\n    image.onload = () => {\n      const canvas = document.createElement('canvas');\n      canvas.width = outputSize;\n      canvas.height = outputSize;\n      const context = canvas.getContext('2d');\n      context.drawImage(image, 0, 0, outputSize, outputSize);\n\n      const imageData = context.getImageData(0, 0, outputSize, outputSize);\n      let monodata = [];\n      for (let i=0, len = imageData.data.length / 4; i < len; i += 1) {\n        monodata.push(imageData.data[i * 4 + 3]);\n        monodata.push(0);\n        monodata.push(0);\n        monodata.push(0);\n      }\n      let monoimgdata = new ImageData(new Uint8ClampedArray(monodata), 28, 28);\n\n      resolve(monoimgdata);\n    };\n  });\n  image.src = base64Image;\n  return arrayLikeImage;\n}\n\nexport function lastArrayItem(array) {\n  if (!array || array.length === 0) {\n    return undefined;\n  }\n  return array[array.length - 1];\n}\n","import React from 'react';\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer} from 'recharts';\nimport './TrainingLineChart.css';\nimport {Measure} from \"./Measure\";\nimport {lastArrayItem} from \"./utils\";\n\nexport const TrainingLineChartComponent = ({containerWidth, chartData, title}) => (\n  <div className=\"training-line-chart\">\n    <div className='title'>{title}</div>\n    <div className='measures'>\n      <Measure name='Accuracy'\n               value={lastArrayItem(chartData.map(v => v.accuracy))}/>\n      <Measure name='Loss'\n               value={lastArrayItem(chartData.map(v => v.loss))}/>\n    </div>\n    <ResponsiveContainer aspect={3} width={containerWidth}>\n      <LineChart data={chartData}>\n        <XAxis dataKey=\"idx\"\n               minTickGap={10}/>\n        <YAxis yAxisId=\"left\"\n               label={{value: \"Accuracy\", angle: -90, position: 'insideLeft'}}/>\n        <YAxis yAxisId=\"right\"\n               orientation=\"right\"\n               label={{value: \"Loss\", angle: -90, position: 'insideRight'}}/>\n        <CartesianGrid strokeDasharray=\"3 3\"/>\n        <Tooltip/>\n        <Legend/>\n        <Line yAxisId=\"left\"\n              type=\"monotone\"\n              dataKey=\"accuracy\"\n              stroke=\"#8884d8\"\n              activeDot={{r: 8}}/>\n        <Line yAxisId=\"right\"\n              type=\"monotone\"\n              dataKey=\"loss\"\n              stroke=\"#82ca9d\"/>\n      </LineChart>\n    </ResponsiveContainer>\n  </div>\n);\n","import React from 'react';\nimport { Line } from 'rc-progress';\nimport \"./TrainingProgress.css\"\n\nexport const TrainingProgress = ({progress, currentEpoch, epochs}) => (\n  <div className='progress'>\n    <div className='text'>\n      Training <span className='percent'>{progress.toFixed(1)}%</span> complete. Epoch {currentEpoch}/{epochs}.\n      To stop training, refresh or close page.\n    </div>\n    <Line percent={progress} />\n  </div>\n);\n","import React, {Component} from 'react';\nimport './Training.css';\nimport {MNIST_MODEL} from \"./App\";\nimport Dimensions from 'react-dimensions';\nimport {TrainingLineChartComponent} from \"./TrainingLineChart\";\nimport {TrainingProgress} from \"./TrainingProgress\";\n\nclass TrainingComponent extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loss: [],\n      accuracy: [],\n      progress: undefined,\n      validationLoss: [],\n      validationAccuracy: [],\n      trainingStarted: false,\n      epochs: MNIST_MODEL.trainEpochs,\n    }\n  }\n\n  render() {\n    return <div className='training'>\n      {this.state.trainingStarted && this.state.progress ?\n        <TrainingProgress progress={this.state.progress}\n                          currentEpoch={this.state.validationLoss.length}\n                          epochs={this.state.epochs}/> :\n        this.renderNotStarted()\n      }\n      {this.state.trainingStarted ? this.renderCharts() : undefined}\n    </div>;\n  }\n\n  renderNotStarted() {\n    return <div>\n      <div>Training not started yet. Select number of epochs and click button to start.</div>\n      <div className='controls'>\n        <div>Number of epochs (between 2 and 10)</div>\n        <input type=\"number\"\n               min=\"2\"\n               max=\"10\"\n               value={this.state.epochs}\n               onChange={this.onEpochsNumberChange}/>\n        <button onClick={() => this.onTrainClick()}>Train</button>\n      </div>\n    </div>;\n  }\n\n  renderCharts() {\n    const {containerWidth} = this.props;\n    return <div className='training-charts'>\n      <TrainingLineChartComponent containerWidth={containerWidth - 32}\n                                  title=\"Training\"\n                                  chartData={this.chartData}/>\n      <TrainingLineChartComponent containerWidth={containerWidth - 32}\n                                  title=\"Validation\"\n                                  chartData={this.chartValidationData}/>\n    </div>;\n  }\n\n  get chartData() {\n    return this.state.accuracy\n      .map((accuracy, batch) => ({idx: batch + 1, accuracy, loss: this.state.loss[batch]}));\n  }\n\n  get chartValidationData() {\n    return this.state.validationAccuracy\n      .map((accuracy, epoch) => ({idx: epoch + 1, accuracy, loss: this.state.validationLoss[epoch]}));\n  }\n\n  async onTrainClick() {\n    await MNIST_MODEL.loadData();\n    this.setState({...this.state, trainingStarted: true});\n    await MNIST_MODEL.train(this.onBatchProcessed, this.onEpochProcessed, this.onTrainingFinished);\n  }\n\n  onBatchProcessed = (progress, loss, accuracy) => this.setState({\n    ...this.state,\n    loss: [...this.state.loss, loss],\n    accuracy: [...this.state.accuracy, accuracy],\n    progress\n  });\n\n  onEpochProcessed = (progress, validationLoss, validationAccuracy) => this.setState({\n    ...this.state,\n    validationLoss: [...this.state.validationLoss, validationLoss],\n    validationAccuracy: [...this.state.validationAccuracy, validationAccuracy]\n  });\n\n  onTrainingFinished = (result) => {\n    const {onTrainingFinished} = this.props;\n    onTrainingFinished(result);\n  };\n\n  onEpochsNumberChange = (e) => {\n    const epochs = e.target.value;\n    MNIST_MODEL.epochs = epochs;\n    this.setState({...this.state, epochs});\n  }\n}\n\nexport const Training = Dimensions()(TrainingComponent);\n","/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport * as tf from '@tensorflow/tfjs';\n\nexport const IMAGE_H = 28;\nexport const IMAGE_W = 28;\nconst IMAGE_SIZE = IMAGE_H * IMAGE_W;\nconst NUM_CLASSES = 10;\nconst NUM_DATASET_ELEMENTS = 65000;\n\nconst NUM_TRAIN_ELEMENTS = 55000;\n\nconst MNIST_IMAGES_SPRITE_PATH = 'https://storage.googleapis.com/learnjs-data/model-builder/mnist_images.png';\nconst MNIST_LABELS_PATH = 'https://storage.googleapis.com/learnjs-data/model-builder/mnist_labels_uint8';\n\n/**\n * A class that fetches the sprited MNIST dataset and provide data as\n * tf.Tensors.\n */\nexport class MnistData {\n\n  async load() {\n    // Make a request for the MNIST sprited image.\n    const img = new Image();\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n    const imgRequest = new Promise((resolve, reject) => {\n      img.crossOrigin = '';\n      img.onload = () => {\n        img.width = img.naturalWidth;\n        img.height = img.naturalHeight;\n\n        const datasetBytesBuffer = new ArrayBuffer(NUM_DATASET_ELEMENTS * IMAGE_SIZE * 4);\n\n        const chunkSize = 5000;\n        canvas.width = img.width;\n        canvas.height = chunkSize;\n\n        for (let i = 0; i < NUM_DATASET_ELEMENTS / chunkSize; i++) {\n          const datasetBytesView = new Float32Array(\n            datasetBytesBuffer, i * IMAGE_SIZE * chunkSize * 4, IMAGE_SIZE * chunkSize\n          );\n          ctx.drawImage(img, 0, i * chunkSize, img.width, chunkSize, 0, 0, img.width, chunkSize);\n\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n          for (let j = 0; j < imageData.data.length / 4; j++) {\n            // All channels hold an equal value since the image is grayscale, so just read the red channel.\n            datasetBytesView[j] = imageData.data[j * 4] / 255;\n          }\n        }\n        this.datasetImages = new Float32Array(datasetBytesBuffer);\n\n        resolve();\n      };\n      img.src = MNIST_IMAGES_SPRITE_PATH;\n    });\n\n    const labelsRequest = fetch(MNIST_LABELS_PATH);\n    const response = await Promise.all([imgRequest, labelsRequest]);\n    const labelsResponse = response[1];\n\n    this.datasetLabels = new Uint8Array(await labelsResponse.arrayBuffer());\n    // Slice the the images and labels into train and test sets.\n    this.trainImages = this.datasetImages.slice(0, IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.testImages = this.datasetImages.slice(IMAGE_SIZE * NUM_TRAIN_ELEMENTS);\n    this.trainLabels = this.datasetLabels.slice(0, NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n    this.testLabels = this.datasetLabels.slice(NUM_CLASSES * NUM_TRAIN_ELEMENTS);\n  }\n\n  /**\n   * Get all training data as a data tensor and a labels tensor.\n   *\n   * @returns\n   *   xs: The data tensor, of shape `[numTrainExamples, 28, 28, 1]`.\n   *   labels: The one-hot encoded labels tensor, of shape\n   *     `[numTrainExamples, 10]`.\n   */\n  get trainData() {\n    const xs = tf.tensor4d(this.trainImages, this.imagesTensorShape(this.trainImages.length));\n    const labels = tf.tensor2d(this.trainLabels, this.labelsTensorShape(this.trainLabels.length));\n    return {xs, labels};\n  }\n\n  /**\n   * Get all test data as a data tensor a a labels tensor.\n   *\n   * @returns\n   *   xs: The data tensor, of shape `[numTestExamples, 28, 28, 1]`.\n   *   labels: The one-hot encoded labels tensor, of shape\n   *     `[numTestExamples, 10]`.\n   */\n  get testData() {\n    let xs = tf.tensor4d(this.testImages, this.imagesTensorShape(this.testImages.length));\n    let labels = tf.tensor2d(this.testLabels, this.labelsTensorShape(this.testLabels.length));\n    return {xs, labels};\n  }\n\n  imagesTensorShape = (dim1) => [dim1 / IMAGE_SIZE, IMAGE_H, IMAGE_W, 1];\n  labelsTensorShape = (dim1) => [dim1 / NUM_CLASSES, NUM_CLASSES]\n}\n","import * as tf from \"@tensorflow/tfjs\";\n\nexport class MnistModelBuilder {\n  static LEARNING_RATE = 0.15;\n\n  static build() {\n    const model = tf.sequential();\n    model.add(tf.layers.conv2d({\n      inputShape: [28, 28, 1],\n      kernelSize: 3,\n      filters: 16,\n      activation: 'relu'\n    }));\n    model.add(tf.layers.maxPooling2d({\n      poolSize: 2,\n      strides: 2\n    }));\n    model.add(tf.layers.conv2d({\n      kernelSize: 3,\n      filters: 32,\n      activation: 'relu'\n    }));\n    model.add(tf.layers.maxPooling2d({\n      poolSize: 2,\n      strides: 2\n    }));\n    model.add(tf.layers.conv2d({\n      kernelSize: 3,\n      filters: 32,\n      activation: 'relu'\n    }));\n    model.add(tf.layers.flatten());\n    model.add(tf.layers.dense({units: 64, activation: 'relu'}));\n    model.add(tf.layers.dense({\n      units: 10,\n      activation: 'softmax'\n    }));\n    model.compile({\n      optimizer: MnistModelBuilder.optimizer,\n      loss: 'categoricalCrossentropy',\n      metrics: ['accuracy'],\n    });\n    return model;\n  }\n\n  static get optimizer() {\n    return tf.train.sgd(MnistModelBuilder.LEARNING_RATE);\n  }\n}\n","import * as tf from '@tensorflow/tfjs';\nimport {MnistData} from \"./MnistData\";\nimport {MnistModelBuilder} from \"./MnistModelBuilder\";\n\nexport class MnistModel {\n  static VALIDATION_SPLIT = 0.15;\n  // How many examples the model should \"see\" before making a parameter update.\n  static BATCH_SIZE = 128;\n\n  trainEpochs = 5;\n  _model;\n  _data;\n  _trainBatchCount = 0;\n  _valAcc;\n  _trainData;\n  _testData;\n  _totalNumBatches;\n\n  constructor() {\n    this._model = MnistModelBuilder.build();\n    this._data = new MnistData();\n  }\n\n  async loadData() {\n    await this._data.load();\n    this._trainData = this._data.trainData;\n    this._testData = this._data.testData;\n    this._totalNumBatches = Math.ceil(\n      this._trainData.xs.shape[0] * (1 - MnistModel.VALIDATION_SPLIT) / MnistModel.BATCH_SIZE\n    ) * this.trainEpochs;\n  }\n\n  async train(onBatchProcessed, onEpochProcessed, onFinished) {\n    // During the long-running fit() call for model training, we include\n    // callbacks, so that we can plot the loss and accuracy values in the page\n    // as the training progresses.\n    await this._model.fit(this._trainData.xs, this._trainData.labels, {\n      batchSize: MnistModel.BATCH_SIZE,\n      validationSplit: MnistModel.VALIDATION_SPLIT,\n      epochs: this.trainEpochs,\n      callbacks: {\n        onBatchEnd: (batch, logs) => this.onTrainingBatchEnd(batch, logs, onBatchProcessed),\n        onEpochEnd: (epoch, logs) => this.onTrainEpochEnd(epoch, logs, onEpochProcessed)\n      }\n    });\n    const testResult = this._model.evaluate(this._testData.xs, this._testData.labels);\n    onFinished(testResult);\n  }\n\n  predict(imageData) {\n    let inputTensor = tf.fromPixels(imageData, 1)\n      .reshape([1, 28, 28, 1])\n      .cast('float32')\n      .div(tf.scalar(255));\n    const predictionResult = this._model.predict(inputTensor).dataSync();\n\n    console.log('predict - output', predictionResult);\n    return predictionResult.indexOf(Math.max(...predictionResult));\n  }\n\n  async onTrainingBatchEnd(batch, logs, callback) {\n    this._trainBatchCount++;\n    const progress = this._trainBatchCount / this._totalNumBatches * 100;\n    callback(progress, logs.loss, logs.acc);\n    await tf.nextFrame();\n  }\n\n  async onTrainEpochEnd(epoch, logs, callback) {\n    this._valAcc = logs.val_acc;\n    callback(this._trainBatchCount, logs.loss, logs.acc);\n    await tf.nextFrame();\n  }\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Canvas} from \"./Canvas\";\nimport {Result} from \"./Result\";\nimport {Training} from \"./Training\";\nimport {base64ToImageData} from \"./utils\";\nimport {MnistModel} from \"./MnistModel\";\n\nexport const MNIST_MODEL = new MnistModel();\n\nclass App extends Component {\n  MNIST_SIZE = 28;\n\n  state = {\n    image: undefined,\n    result: undefined,\n    trainingFinished: false\n  };\n\n  render() {\n    return <div className=\"app\">\n      <section className=\"app-content\">\n        <Training onTrainingFinished={() => this.setState({...this.state, trainingFinished: true})}/>\n      </section>\n      <section className=\"app-content\">\n        <Canvas onNewImage={image => this.onNewImage(image)}\n                disabled={!this.state.trainingFinished}/>\n        <Result digit={this.state.result}/>\n      </section>\n    </div>;\n  }\n\n  async onNewImage(base64Image) {\n    if (base64Image === undefined) {\n      this.setState({...this.state, result: undefined});\n    } else {\n      const image = await base64ToImageData(base64Image, this.MNIST_SIZE);\n      const result = MNIST_MODEL.predict(image);\n      this.setState({...this.state, result});\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 861;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 893;"],"sourceRoot":""}